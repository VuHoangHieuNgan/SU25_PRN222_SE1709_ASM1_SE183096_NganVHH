@page "/AppointmentsNganVHH/Create"
@model DrugPrevention.RazorWebApp.NganVHH.Pages.AppointmentsNganVHHs.CreateModel

@{
	ViewData["Title"] = "Đặt Lịch Hẹn Tư Vấn";
}

<style>
	.appointment-container {
		background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
		min-height: 100vh;
		padding: 1rem 0;
	}
	
	.appointment-card {
		background: rgba(255, 255, 255, 0.95);
		backdrop-filter: blur(10px);
		border-radius: 20px;
		box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
		border: 1px solid rgba(255, 255, 255, 0.2);
		overflow: hidden;
		transition: all 0.3s ease;
	}
	
	.appointment-card:hover {
		transform: translateY(-5px);
		box-shadow: 0 30px 80px rgba(0, 0, 0, 0.15);
	}
	
	.card-header-custom {
		background: linear-gradient(135deg, #4A90E2 0%, #357ABD 100%);
		color: white;
		padding: 1.5rem;
		text-align: center;
		position: relative;
		overflow: hidden;
	}
	
	.card-header-custom::before {
		content: '';
		position: absolute;
		top: -50%;
		left: -50%;
		width: 200%;
		height: 200%;
		background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="50" cy="50" r="2" fill="rgba(255,255,255,0.1)"/></svg>') repeat;
		animation: floatAnimation 6s ease-in-out infinite;
	}
	
	@@keyframes floatAnimation {
		0%, 100% { transform: translateY(0px) rotate(0deg); }
		50% { transform: translateY(-10px) rotate(180deg); }
	}
	
	.card-header-custom h2 {
		margin: 0;
		font-size: 1.8rem;
		font-weight: 700;
		text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
		position: relative;
		z-index: 1;
	}
	
	.card-header-custom .subtitle {
		margin-top: 0.3rem;
		font-size: 0.95rem;
		opacity: 0.9;
		position: relative;
		z-index: 1;
	}
	
	.card-body-custom {
		padding: 1.5rem;
		background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
	}
	
	.form-columns {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 1.5rem;
	}
	
	.form-column-full {
		grid-column: 1 / -1;
	}
	
	.form-group-custom {
		margin-bottom: 1.2rem;
		position: relative;
	}
	
	.form-label-custom {
		font-weight: 600;
		color: #2c3e50;
		margin-bottom: 0.75rem;
		display: flex;
		align-items: center;
		font-size: 1rem;
	}
	
	.form-label-custom i {
		margin-right: 0.5rem;
		color: #4A90E2;
		font-size: 1.1rem;
	}
	
	.form-control-custom, .form-select-custom {
		border: 2px solid #e0e6ed;
		border-radius: 8px;
		padding: 0.6rem 1rem;
		font-size: 0.9rem;
		transition: all 0.3s ease;
		background: white;
		box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
		font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
	}
	
	.form-control-custom:focus, .form-select-custom:focus {
		border-color: #4A90E2;
		box-shadow: 0 0 0 0.2rem rgba(74, 144, 226, 0.25);
		outline: none;
		transform: translateY(-2px);
	}
	
	/* Fix cho dropdown options */
	.form-select-custom option {
		font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
		font-size: 1rem;
		padding: 0.5rem;
		background: white;
		color: #333;
		text-rendering: optimizeLegibility;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
		font-variant-ligatures: none;
	}
	
	/* Đảm bảo encoding UTF-8 đúng */
	.form-select-custom {
		text-rendering: optimizeLegibility;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;
		font-variant-ligatures: none;
	}
	
	/* Input wrapper với icon bên trong */
	.input-wrapper {
		position: relative;
		display: flex;
		align-items: center;
	}
	
	.input-icon {
		position: absolute;
		left: 1rem;
		top: 50%;
		transform: translateY(-50%);
		color: #4A90E2;
		font-size: 1.1rem;
		z-index: 10;
		pointer-events: none;
		transition: all 0.3s ease;
	}
	
	.textarea-icon {
		top: 1.2rem;
		transform: none;
	}
	
	.input-wrapper .form-control,
	.input-wrapper .form-select {
		padding-left: 3rem;
		transition: all 0.3s ease;
	}
	
	.input-wrapper:hover .input-icon {
		color: #357ABD;
		transform: translateY(-50%) scale(1.1);
	}
	
	.input-wrapper .textarea-icon:hover {
		transform: scale(1.1);
	}
	
	.input-wrapper:focus-within .input-icon {
		color: #357ABD;
		text-shadow: 0 0 8px rgba(74, 144, 226, 0.4);
	}
	
	.radio-group-custom {
		display: flex;
		gap: 1.5rem;
		margin-top: 0.5rem;
	}
	
	.radio-item-custom {
		display: flex;
		align-items: center;
		background: white;
		padding: 0.5rem 1rem;
		border-radius: 8px;
		border: 2px solid #e0e6ed;
		transition: all 0.3s ease;
		cursor: pointer;
		flex: 1;
		justify-content: center;
	}
	
	.radio-item-custom:hover {
		border-color: #4A90E2;
		background: #f0f7ff;
		transform: translateY(-2px);
	}
	
	.radio-item-custom input[type="radio"] {
		margin-right: 0.5rem;
		accent-color: #4A90E2;
	}
	
	.radio-item-custom input[type="radio"]:checked + label {
		color: #4A90E2;
		font-weight: 600;
	}
	
	.radio-item-custom.checked {
		border-color: #4A90E2;
		background: linear-gradient(135deg, #f0f7ff 0%, #e1efff 100%);
		box-shadow: 0 4px 15px rgba(74, 144, 226, 0.2);
	}
	
	.radio-item-custom i {
		transition: all 0.3s ease;
	}
	
	.radio-item-custom:hover i {
		transform: scale(1.2);
	}
	
	.radio-item-custom.checked i {
		transform: scale(1.1);
		text-shadow: 0 0 10px rgba(74, 144, 226, 0.5);
	}
	
	.textarea-custom {
		min-height: 80px;
		resize: vertical;
	}
	
	.btn-group-custom {
		display: flex;
		gap: 0.8rem;
		justify-content: center;
		padding: 1.2rem;
		background: #f8f9fa;
		border-top: 1px solid #e9ecef;
		flex-wrap: wrap;
	}
	
	/* Simple focus states */
	.btn-primary-custom:focus,
	.btn-danger-custom:focus,
	.btn-secondary-custom:focus {
		outline: none;
		box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.25);
	}
	
	.btn-danger-custom:focus {
		box-shadow: 0 0 0 3px rgba(255, 107, 107, 0.25);
	}
	
	.btn-secondary-custom:focus {
		box-shadow: 0 0 0 3px rgba(108, 117, 125, 0.25);
	}
	
	.btn-primary-custom {
		background: #4A90E2;
		border: none;
		padding: 0.875rem 2rem;
		border-radius: 8px;
		font-weight: 600;
		font-size: 0.95rem;
		color: white;
		transition: all 0.3s ease;
		box-shadow: 0 2px 8px rgba(74, 144, 226, 0.3);
		min-width: 160px;
		text-align: center;
		position: relative;
		overflow: hidden;
	}
	
	.btn-primary-custom::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: rgba(255, 255, 255, 0.1);
		opacity: 0;
		transition: opacity 0.3s ease;
	}
	
	.btn-primary-custom:hover::before {
		opacity: 1;
	}
	
	.btn-primary-custom:hover {
		background: #357ABD;
		transform: translateY(-2px);
		box-shadow: 0 4px 16px rgba(74, 144, 226, 0.4);
	}
	
	.btn-primary-custom:active {
		transform: translateY(0);
		box-shadow: 0 2px 8px rgba(74, 144, 226, 0.3);
	}
	
	.btn-danger-custom {
		background: #FF6B6B;
		border: none;
		padding: 0.875rem 2rem;
		border-radius: 8px;
		font-weight: 600;
		font-size: 0.95rem;
		color: white;
		transition: all 0.3s ease;
		box-shadow: 0 2px 8px rgba(255, 107, 107, 0.3);
		min-width: 160px;
		text-align: center;
		position: relative;
		overflow: hidden;
	}
	
	.btn-danger-custom::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: rgba(255, 255, 255, 0.1);
		opacity: 0;
		transition: opacity 0.3s ease;
	}
	
	.btn-danger-custom:hover::before {
		opacity: 1;
	}
	
	.btn-danger-custom:hover {
		background: #EE5A52;
		transform: translateY(-2px);
		box-shadow: 0 4px 16px rgba(255, 107, 107, 0.4);
	}
	
	.btn-danger-custom:active {
		transform: translateY(0);
		box-shadow: 0 2px 8px rgba(255, 107, 107, 0.3);
	}
	
	.btn-secondary-custom {
		background: #6c757d;
		border: none;
		padding: 0.875rem 2rem;
		border-radius: 8px;
		font-weight: 600;
		font-size: 0.95rem;
		color: white;
		text-decoration: none;
		display: inline-flex;
		align-items: center;
		justify-content: center;
		transition: all 0.3s ease;
		box-shadow: 0 2px 8px rgba(108, 117, 125, 0.3);
		min-width: 160px;
		position: relative;
		overflow: hidden;
	}
	
	.btn-secondary-custom::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: rgba(255, 255, 255, 0.1);
		opacity: 0;
		transition: opacity 0.3s ease;
	}
	
	.btn-secondary-custom:hover::before {
		opacity: 1;
	}
	
	.btn-secondary-custom:hover {
		background: #5a6268;
		transform: translateY(-2px);
		box-shadow: 0 4px 16px rgba(108, 117, 125, 0.4);
		color: white;
		text-decoration: none;
	}
	
	.btn-secondary-custom:active {
		transform: translateY(0);
		box-shadow: 0 2px 8px rgba(108, 117, 125, 0.3);
	}
	
	.error-message {
		color: #dc3545;
		font-size: 0.875rem;
		margin-top: 0.25rem;
		display: none; /* Ẩn ban đầu */
		align-items: center;
	}
	
	.error-message.show {
		display: flex; /* Hiện khi có class show */
	}
	
	.error-message i {
		margin-right: 0.25rem;
	}
	
	.alert-custom {
		border-radius: 12px;
		border: none;
		box-shadow: 0 4px 15px rgba(220, 53, 69, 0.2);
	}
	
	/* Ẩn validation errors mặc định */
	.field-validation-error {
		display: none !important;
	}
	
	/* Custom validation display */
	.form-control-custom.is-invalid,
	.form-select-custom.is-invalid {
		border-color: #dc3545;
		box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
	}
	
	@@media (max-width: 768px) {
		.appointment-container {
			padding: 0.5rem;
		}
		
		.card-body-custom {
			padding: 1rem;
		}
		
		.form-columns {
			grid-template-columns: 1fr;
			gap: 1rem;
		}
		
		.radio-group-custom {
			flex-direction: column;
		}
		
		.btn-group-custom {
			flex-direction: column;
			align-items: center;
			gap: 1rem;
			padding: 1rem;
		}
		
		.btn-primary-custom,
		.btn-danger-custom,
		.btn-secondary-custom {
			width: 100%;
			max-width: 280px;
			min-width: auto;
			padding: 0.6rem 1.2rem;
			font-size: 0.85rem;
		}
		
		.btn-primary-custom:hover,
		.btn-danger-custom:hover,
		.btn-secondary-custom:hover {
			transform: translateY(-1px);
		}
		
		.card-header-custom h2 {
			font-size: 1.5rem;
		}
		
		.card-header-custom .subtitle {
			font-size: 0.85rem;
		}
		
		.form-group-custom {
			margin-bottom: 1rem;
		}
	}
</style>

<div class="appointment-container">
	<div class="container">
		<div class="row justify-content-center">
			<div class="col-lg-8 col-xl-7">
				<div class="appointment-card">
					<div class="card-header-custom">
						<h2><i class="fas fa-calendar-plus me-3"></i>Đặt Lịch Hẹn Tư Vấn</h2>
						<p class="subtitle">Hệ thống tư vấn và hỗ trợ phòng chống tệ nạn xã hội</p>
					</div>
					
					<div class="card-body-custom">
						<form method="post" novalidate>
							<div asp-validation-summary="ModelOnly" class="alert alert-danger alert-custom" style="display: none;"></div>

							<div class="form-columns">
								<div class="form-group-custom">
								<label asp-for="AppointmentsNganVHH.UserID" class="form-label-custom">
									<i class="fas fa-user"></i>UserID
								</label>
												<select asp-for="AppointmentsNganVHH.UserID" class="form-select form-select-custom" asp-items="ViewBag.UserID" id="AppointmentsNganVHH_UserID">
									<option value="">Chọn người cần tư vấn</option>
								</select>
								<span asp-validation-for="AppointmentsNganVHH.UserID" class="error-message"></span>
							</div>

							<div class="form-group-custom">
								<label asp-for="AppointmentsNganVHH.ConsultantID" class="form-label-custom">
									<i class="fas fa-user-md"></i>ConsultantID
								</label>
												<select asp-for="AppointmentsNganVHH.ConsultantID" class="form-select form-select-custom" asp-items="ViewBag.ConsultantID" id="AppointmentsNganVHH_ConsultantID">
									<option value="">Chọn chuyên gia tư vấn</option>
								</select>
								<span asp-validation-for="AppointmentsNganVHH.ConsultantID" class="error-message"></span>
							</div>

							<div class="form-group-custom">
								<label asp-for="AppointmentsNganVHH.AppointmentDateTime" class="form-label-custom">
									<i class="fas fa-clock"></i>AppointmentDateTime
								</label>
								<input asp-for="AppointmentsNganVHH.AppointmentDateTime" type="datetime-local" class="form-control form-control-custom" id="AppointmentsNganVHH_AppointmentDateTime" />
								<span asp-validation-for="AppointmentsNganVHH.AppointmentDateTime" class="error-message"></span>
							</div>

							<div class="form-group-custom">
								<label asp-for="AppointmentsNganVHH.Duration" class="form-label-custom">
									<i class="fas fa-hourglass-half"></i>Duration
								</label>
												<select asp-for="AppointmentsNganVHH.Duration" class="form-select form-select-custom" id="AppointmentsNganVHH_Duration">
									<option value="30">30 phút</option>
									<option value="45">45 phút</option>
									<option value="60" selected>60 phút</option>
									<option value="75">75 phút</option>
									<option value="90">90 phút</option>
									<option value="120">120 phút</option>
								</select>
								<span asp-validation-for="AppointmentsNganVHH.Duration" class="error-message"></span>
								</div>

									<div class="form-group-custom form-column-full">
									<label asp-for="AppointmentsNganVHH.ConsultationType" class="form-label-custom">
										<i class="fas fa-video"></i>ConsultationType
									</label>
									<div class="radio-group-custom">
										<div class="radio-item-custom">
											<input asp-for="AppointmentsNganVHH.ConsultationType" value="Online" type="radio" class="form-check-input" id="ConsultationType_Online" checked />
											<label class="form-check-label" for="ConsultationType_Online">
												<i class="me-2 text-primary"></i>Trực Tuyến
											</label>
										</div>
										<div class="radio-item-custom">
											<input asp-for="AppointmentsNganVHH.ConsultationType" value="In-person" type="radio" class="form-check-input" id="ConsultationType_Inperson" />
											<label class="form-check-label" for="ConsultationType_Inperson">
												<i class="me-2 text-success"></i>Trực Tiếp
											</label>
										</div>
									</div>
									<span asp-validation-for="AppointmentsNganVHH.ConsultationType" class="error-message"></span>
								</div>

							<div class="form-group-custom">
								<label asp-for="AppointmentsNganVHH.AssessmentType" class="form-label-custom">
									<i class="fas fa-clipboard-list"></i>AssessmentType
								</label>
								<input asp-for="AppointmentsNganVHH.AssessmentType" class="form-control form-control-custom" id="AppointmentsNganVHH_AssessmentType" placeholder="Ví dụ: Tư vấn tâm lý, Tư vấn cai nghiện..." />
								<span asp-validation-for="AppointmentsNganVHH.AssessmentType" class="error-message"></span>
							</div>

							<div class="form-group-custom">
								<label asp-for="AppointmentsNganVHH.RiskLevel" class="form-label-custom">
									<i class="fas fa-exclamation-triangle"></i>RiskLevel
								</label>
												<select asp-for="AppointmentsNganVHH.RiskLevel" class="form-select form-select-custom" id="AppointmentsNganVHH_RiskLevel">
									<option value="Low">🟢 Thấp</option>
									<option value="Medium">🟡 Trung Bình</option>
									<option value="High">🔴 Cao</option>
								</select>
								<span asp-validation-for="AppointmentsNganVHH.RiskLevel" class="error-message"></span>
							</div>

								<div class="form-group-custom form-column-full">
									<label asp-for="AppointmentsNganVHH.PrimaryIssue" class="form-label-custom">
										<i class="fas fa-comment-medical"></i>PrimaryIssue
									</label>
									<textarea asp-for="AppointmentsNganVHH.PrimaryIssue" class="form-control form-control-custom textarea-custom" rows="2" maxlength="255" id="AppointmentsNganVHH_PrimaryIssue" placeholder="Mô tả ngắn gọn vấn đề cần tư vấn..."></textarea>
									<span asp-validation-for="AppointmentsNganVHH.PrimaryIssue" class="error-message"></span>
								</div>

								<div class="form-group-custom form-column-full">
									<label asp-for="AppointmentsNganVHH.IsInterpreterNeeded" class="form-label-custom">
										<i class="fas fa-language"></i>IsInterpreterNeeded
									</label>
									<div class="radio-group-custom">
										<div class="radio-item-custom">
											<input class="form-check-input" type="radio" asp-for="AppointmentsNganVHH.IsInterpreterNeeded" value="true" id="IsInterpreterNeeded_Yes" />
											<label class="form-check-label" for="IsInterpreterNeeded_Yes">
												<i class="me-2 text-primary"></i>Có cần
											</label>
										</div>
										<div class="radio-item-custom">
											<input class="form-check-input" type="radio" asp-for="AppointmentsNganVHH.IsInterpreterNeeded" value="false" id="IsInterpreterNeeded_No" checked />
											<label class="form-check-label" for="IsInterpreterNeeded_No">
												<i class="me-2 text-secondary"></i>Không cần
											</label>
										</div>
									</div>
									<span asp-validation-for="AppointmentsNganVHH.IsInterpreterNeeded" class="error-message"></span>
								</div>

								<div class="form-group-custom form-column-full">
									<label asp-for="AppointmentsNganVHH.Notes" class="form-label-custom">
										<i class="fas fa-sticky-note"></i>Notes
									</label>
									<textarea asp-for="AppointmentsNganVHH.Notes" class="form-control form-control-custom textarea-custom" rows="2" id="AppointmentsNganVHH_Notes" placeholder="Thông tin bổ sung, yêu cầu đặc biệt..."></textarea>
									<span asp-validation-for="AppointmentsNganVHH.Notes" class="error-message"></span>
								</div>
							</div>

							<div class="btn-group-custom">
												<button type="submit" class="btn btn-primary-custom">
					<i class="fas fa-calendar-check me-2"></i>Đặt Lịch Hẹn
				</button>
				<input type="button" id="btnHubCreate" value="💫 SignalR Hub" class="btn btn-danger-custom" />
				<a asp-page="./Index" class="btn btn-secondary-custom">
					<i class="fas fa-arrow-left me-2"></i>Quay Lại
				</a>
							</div>
						</form>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/appointment-validate.js"></script>

<script>
	"use strict";

	// Animation for radio buttons
	document.addEventListener('DOMContentLoaded', function() {
		const radioItems = document.querySelectorAll('.radio-item-custom');
		radioItems.forEach(item => {
			const radio = item.querySelector('input[type="radio"]');
			if (radio.checked) {
				item.classList.add('checked');
			}
			
			radio.addEventListener('change', function() {
				// Remove checked class from all items in the same group
				const groupName = this.name;
				document.querySelectorAll(`input[name="${groupName}"]`).forEach(r => {
					r.closest('.radio-item-custom').classList.remove('checked');
				});
				
				// Add checked class to current item
				if (this.checked) {
					item.classList.add('checked');
				}
			});
		});
	});

	var connection = new signalR.HubConnectionBuilder().withUrl("/DrugPreventionHub").build();

	connection.start().then(function () {
		console.log("Connected to the SignalR Hub");
	}).catch(function (err) {
		return console.error(err.toString());
	});

	document.getElementById("btnHubCreate").addEventListener("click", function (event) {
		if (typeof validateAppointmentForm === "function" && !validateAppointmentForm()) {
			console.error("Validation failed. Please check the form inputs.");
			event.preventDefault();
			return;
		} else {
			console.log("Passed. Proceeding to send data to SignalRHub.");
		}

		// Gửi dữ liệu đến SignalRHub
		var dataObj = JSON.stringify({
			UserID: document.getElementById("AppointmentsNganVHH_UserID").value,
			ConsultantID: document.getElementById("AppointmentsNganVHH_ConsultantID").value,
			AppointmentDateTime: document.getElementById("AppointmentsNganVHH_AppointmentDateTime").value,
			Duration: document.getElementById("AppointmentsNganVHH_Duration").value,
			ConsultationType: document.querySelector('input[name="AppointmentsNganVHH.ConsultationType"]:checked').value,
			AssessmentType: document.getElementById("AppointmentsNganVHH_AssessmentType").value,
			IsInterpreterNeeded: document.getElementById("IsInterpreterNeeded_Yes").checked,
			PrimaryIssue: document.getElementById("AppointmentsNganVHH_PrimaryIssue").value,
			RiskLevel: document.getElementById("AppointmentsNganVHH_RiskLevel").value,
			Notes: document.getElementById("AppointmentsNganVHH_Notes").value
		});

		console.log(dataObj);

		connection.invoke("HubCreate_AppointmentsNganVHH", dataObj).then(() => {
			window.location.href = "/AppointmentsNganVHH/Index";
		}).catch(function (err) {
			return console.error(err.toString());
		});
	});
</script>

<script>
	document.addEventListener('DOMContentLoaded', function () {
		var form = document.querySelector('form');
		if (form) {
			form.addEventListener('submit', function (e) {
				if (typeof validateAppointmentForm !== "function") {
					console.error('validateAppointmentForm is not loaded!');
					e.preventDefault();
					return;
				}
				if (!validateAppointmentForm()) {
					e.preventDefault();
				}
			});
		}
	});
</script>

@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}