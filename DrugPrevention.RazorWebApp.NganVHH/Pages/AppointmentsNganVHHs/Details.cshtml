@page "/AppointmentsNganVHH/Details"
@model DrugPrevention.RazorWebApp.NganVHH.Pages.AppointmentsNganVHHs.DetailsModel

@{
	ViewData["Title"] = "Chi Tiết Cuộc Hẹn";
}

<style>
	.appointment-container {
		background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
		min-height: 100vh;
		padding: 1rem 0;
	}
	
	.appointment-card {
		background: rgba(255, 255, 255, 0.95);
		backdrop-filter: blur(10px);
		border-radius: 20px;
		box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
		border: 1px solid rgba(255, 255, 255, 0.2);
		overflow: hidden;
		transition: all 0.3s ease;
	}
	
	.appointment-card:hover {
		transform: translateY(-5px);
		box-shadow: 0 30px 80px rgba(0, 0, 0, 0.15);
	}
	
	.card-header-custom {
		background: linear-gradient(135deg, #8E44AD 0%, #9B59B6 100%);
		color: white;
		padding: 1.5rem;
		text-align: center;
		position: relative;
		overflow: hidden;
	}
	
	.card-header-custom::before {
		content: '';
		position: absolute;
		top: -50%;
		left: -50%;
		width: 200%;
		height: 200%;
		background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><circle cx="50" cy="50" r="2" fill="rgba(255,255,255,0.1)"/></svg>') repeat;
		animation: floatAnimation 6s ease-in-out infinite;
	}
	
	@@keyframes floatAnimation {
		0%, 100% { transform: translateY(0px) rotate(0deg); }
		50% { transform: translateY(-10px) rotate(180deg); }
	}
	
	.card-header-custom h2 {
		margin: 0;
		font-size: 1.8rem;
		font-weight: 700;
		text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
		position: relative;
		z-index: 1;
	}
	
	.card-header-custom .subtitle {
		margin-top: 0.3rem;
		font-size: 0.95rem;
		opacity: 0.9;
		position: relative;
		z-index: 1;
	}
	
	.card-body-custom {
		padding: 1.5rem;
		background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
	}
	
	.form-columns {
		display: grid;
		grid-template-columns: 1fr 1fr;
		gap: 1.5rem;
	}
	
	.form-column-full {
		grid-column: 1 / -1;
	}
	
	.detail-group {
		margin-bottom: 1.2rem;
		position: relative;
		width: 100%;
	}
	
	.detail-label {
		font-weight: 600;
		color: #2c3e50;
		margin-bottom: 0.75rem;
		display: flex;
		align-items: center;
		font-size: 1rem;
		width: 100%;
	}
	
	.detail-label i {
		margin-right: 0.5rem;
		color: #8E44AD;
		font-size: 1.1rem;
	}
	
	.detail-value {
		background: white;
		border: 2px solid #e0e6ed;
		border-radius: 8px;
		padding: 0.6rem 1rem;
		font-size: 0.9rem;
		color: #495057;
		box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
		font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
		min-height: 42px;
		display: flex;
		align-items: center;
		position: relative;
		width: 100%;
		box-sizing: border-box;
	}
	
	.detail-value.readonly {
		background-color: #f8f9fa;
		border-color: #e9ecef;
		opacity: 0.8;
	}
	
	/* Input wrapper với icon bên trong */
	.input-wrapper {
		position: relative;
		display: flex;
		align-items: center;
		width: 100%;
	}
	
	.input-icon {
		position: absolute;
		left: 1rem;
		top: 50%;
		transform: translateY(-50%);
		color: #8E44AD;
		font-size: 1.1rem;
		z-index: 10;
		pointer-events: none;
		transition: all 0.3s ease;
	}
	
	.textarea-icon {
		top: 1.2rem;
		transform: none;
	}
	
	.input-wrapper .detail-value {
		padding-left: 3rem;
		transition: all 0.3s ease;
	}
	
	/* Consistent styling cho tất cả input wrappers */
	
	/* Fix cho detail-value trong textarea */
	.detail-value.textarea-custom {
		align-items: flex-start;
		padding-top: 0.8rem;
		padding-left: 3rem;
		min-height: 80px;
	}
	
	/* Đảm bảo tất cả detail-value có cùng height baseline */
	.detail-value:not(.textarea-custom) {
		height: 42px;
		max-height: 42px;
		overflow: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
	}
	
	/* Special handling cho values có thể dài */
	.detail-value:not(.textarea-custom):hover {
		white-space: normal;
		overflow: visible;
		height: auto;
		max-height: none;
		z-index: 10;
		position: relative;
		box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
	}
	
	.radio-group-custom {
		display: flex;
		gap: 1.5rem;
		margin-top: 0.5rem;
	}
	
	.radio-item-display {
		display: flex;
		align-items: center;
		background: white;
		padding: 0.5rem 1rem;
		border-radius: 8px;
		border: 2px solid #e0e6ed;
		transition: all 0.3s ease;
		flex: 1;
		justify-content: center;
		position: relative;
	}
	
	.radio-item-display.active {
		border-color: #8E44AD;
		background: linear-gradient(135deg, #f0f7ff 0%, #e1efff 100%);
		box-shadow: 0 4px 15px rgba(142, 68, 173, 0.2);
	}
	
	.radio-item-display i {
		margin-right: 0.5rem;
		transition: all 0.3s ease;
	}
	
	.radio-item-display.active i {
		transform: scale(1.1);
		text-shadow: 0 0 10px rgba(142, 68, 173, 0.5);
	}
	
	.textarea-custom {
		min-height: 80px;
		resize: none;
	}
	
	.btn-group-custom {
		display: flex;
		gap: 0.8rem;
		justify-content: center;
		padding: 1.2rem;
		background: #f8f9fa;
		border-top: 1px solid #e9ecef;
		flex-wrap: wrap;
	}
	
	.btn-primary-custom {
		background: #8E44AD;
		border: none;
		padding: 0.875rem 2rem;
		border-radius: 8px;
		font-weight: 600;
		font-size: 0.95rem;
		color: white;
		transition: all 0.3s ease;
		box-shadow: 0 2px 8px rgba(142, 68, 173, 0.3);
		min-width: 160px;
		text-align: center;
		position: relative;
		overflow: hidden;
		text-decoration: none;
		display: inline-flex;
		align-items: center;
		justify-content: center;
	}
	
	.btn-primary-custom::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: rgba(255, 255, 255, 0.1);
		opacity: 0;
		transition: opacity 0.3s ease;
	}
	
	.btn-primary-custom:hover::before {
		opacity: 1;
	}
	
	.btn-primary-custom:hover {
		background: #7D3C98;
		transform: translateY(-2px);
		box-shadow: 0 4px 16px rgba(142, 68, 173, 0.4);
		color: white;
		text-decoration: none;
	}
	
	.btn-primary-custom:active {
		transform: translateY(0);
		box-shadow: 0 2px 8px rgba(142, 68, 173, 0.3);
	}
	
	.btn-secondary-custom {
		background: #6c757d;
		border: none;
		padding: 0.875rem 2rem;
		border-radius: 8px;
		font-weight: 600;
		font-size: 0.95rem;
		color: white;
		text-decoration: none;
		display: inline-flex;
		align-items: center;
		justify-content: center;
		transition: all 0.3s ease;
		box-shadow: 0 2px 8px rgba(108, 117, 125, 0.3);
		min-width: 160px;
		position: relative;
		overflow: hidden;
	}
	
	.btn-secondary-custom::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: rgba(255, 255, 255, 0.1);
		opacity: 0;
		transition: opacity 0.3s ease;
	}
	
	.btn-secondary-custom:hover::before {
		opacity: 1;
	}
	
	.btn-secondary-custom:hover {
		background: #5a6268;
		transform: translateY(-2px);
		box-shadow: 0 4px 16px rgba(108, 117, 125, 0.4);
		color: white;
		text-decoration: none;
	}
	
	.btn-secondary-custom:active {
		transform: translateY(0);
		box-shadow: 0 2px 8px rgba(108, 117, 125, 0.3);
	}
	
	/* Simple focus states */
	.btn-primary-custom:focus,
	.btn-secondary-custom:focus {
		outline: none;
		box-shadow: 0 0 0 3px rgba(142, 68, 173, 0.25);
	}
	
	.btn-secondary-custom:focus {
		box-shadow: 0 0 0 3px rgba(108, 117, 125, 0.25);
	}
	
	.checkbox-display {
		width: 20px;
		height: 20px;
		border: 2px solid #8E44AD;
		border-radius: 4px;
		position: relative;
		display: inline-block;
		margin-right: 0.5rem;
	}
	
	.checkbox-display.checked {
		background: #8E44AD;
	}
	
	.checkbox-display.checked::after {
		content: '✓';
		color: white;
		font-size: 14px;
		font-weight: bold;
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
	}
	
	.link-display {
		color: #8E44AD;
		text-decoration: none;
		font-weight: 500;
		transition: all 0.3s ease;
	}
	
	.link-display:hover {
		color: #7D3C98;
		text-decoration: underline;
	}
	
	.text-muted {
		color: #6c757d !important;
		font-style: italic;
	}
	
	@@media (max-width: 768px) {
		.appointment-container {
			padding: 0.5rem;
		}
		
		.card-body-custom {
			padding: 1rem;
		}
		
		.form-columns {
			grid-template-columns: 1fr;
			gap: 1rem;
		}
		
		.radio-group-custom {
			flex-direction: column;
		}
		
		.btn-group-custom {
			flex-direction: column;
			align-items: center;
			gap: 1rem;
			padding: 1rem;
		}
		
		.btn-primary-custom,
		.btn-secondary-custom {
			width: 100%;
			max-width: 280px;
			min-width: auto;
			padding: 0.6rem 1.2rem;
			font-size: 0.85rem;
		}
		
		.btn-primary-custom:hover,
		.btn-secondary-custom:hover {
			transform: translateY(-1px);
		}
		
		.card-header-custom h2 {
			font-size: 1.5rem;
		}
		
		.card-header-custom .subtitle {
			font-size: 0.85rem;
		}
		
		.detail-group {
			margin-bottom: 1rem;
		}
	}
</style>

<div class="appointment-container">
	<div class="container">
		<div class="row justify-content-center">
			<div class="col-lg-8 col-xl-7">
				<div class="appointment-card" id="AppointmentsNganVHH_Container">
					<div class="card-header-custom">
						<h2><i class="fas fa-info-circle me-3"></i>Chi Tiết Cuộc Hẹn</h2>
						<p class="subtitle">Thông tin chi tiết cuộc hẹn tư vấn</p>
					</div>
					
					<div class="card-body-custom">
						<div class="form-columns">
							<div class="detail-group form-column-full">
								<div class="detail-label">
									<i class="fas fa-hashtag"></i>AppointmentNganVHHID
								</div>
								<div class="detail-value readonly">@Model.AppointmentsNganVHH.AppointmentNganVHHID</div>
							</div>

							<div class="detail-group">
								<div class="detail-label">
									<i class="fas fa-user"></i>UserID
								</div>
								<div class="detail-value">
									@Model.AppointmentsNganVHH.UserID
									@if (!string.IsNullOrEmpty(Model.AppointmentsNganVHH.User?.Email))
									{
										<span class="text-muted ms-2">(@Model.AppointmentsNganVHH.User.Email)</span>
									}
								</div>
							</div>

							<div class="detail-group">
								<div class="detail-label">
									<i class="fas fa-user-md"></i>ConsultantID
								</div>
								<div class="detail-value">
									@Model.AppointmentsNganVHH.ConsultantID
									@if (!string.IsNullOrEmpty(Model.AppointmentsNganVHH.Consultant?.User?.Email))
									{
										<span class="text-muted ms-2">(@Model.AppointmentsNganVHH.Consultant.User.Email)</span>
									}
								</div>
							</div>

							@if (!string.IsNullOrEmpty(Model.AppointmentsNganVHH.Consultant?.Specialization))
							{
								<div class="detail-group form-column-full" id="AppointmentsNganVHH_Consultant_Specialization">
									<div class="detail-label">
										<i class="fas fa-graduation-cap"></i>Consultant Specialization
									</div>
									<div class="detail-value">@Model.AppointmentsNganVHH.Consultant.Specialization</div>
								</div>
							}

							<div class="detail-group" id="AppointmentsNganVHH_AppointmentDateTime">
								<div class="detail-label">
									<i class="fas fa-clock"></i>AppointmentDateTime
								</div>
								<div class="detail-value">@Model.AppointmentsNganVHH.AppointmentDateTime.ToString("dd/MM/yyyy HH:mm")</div>
							</div>

							<div class="detail-group" id="AppointmentsNganVHH_Duration">
								<div class="detail-label">
									<i class="fas fa-hourglass-half"></i>Duration
								</div>
								<div class="detail-value">@Model.AppointmentsNganVHH.Duration phút</div>
							</div>

							<div class="detail-group form-column-full" id="AppointmentsNganVHH_ConsultationType">
								<div class="detail-label">
									<i class="fas fa-video"></i>ConsultationType
								</div>
								<div class="radio-group-custom">
									<div class="radio-item-display @(Model.AppointmentsNganVHH.ConsultationType == "Online" ? "active" : "")">
										<i class="me-2 text-primary"></i>Trực Tuyến
									</div>
									<div class="radio-item-display @(Model.AppointmentsNganVHH.ConsultationType == "In-person" ? "active" : "")">
										<i class="me-2 text-success"></i>Trực Tiếp
									</div>
								</div>
							</div>

							<div class="detail-group" id="AppointmentsNganVHH_Status">
								<div class="detail-label">
									<i class="fas fa-info-circle"></i>Status
								</div>
								<div class="detail-value">
									@if (Model.AppointmentsNganVHH.Status == "Scheduled")
									{
										<span>📅 Đã Lên Lịch</span>
									}
									else if (Model.AppointmentsNganVHH.Status == "In-Progress")
									{
										<span>⚡ Đang Tiến Hành</span>
									}
									else if (Model.AppointmentsNganVHH.Status == "Completed")
									{
										<span>✅ Hoàn Thành</span>
									}
									else if (Model.AppointmentsNganVHH.Status == "Cancelled")
									{
										<span>❌ Đã Hủy</span>
									}
									else
									{
										<span>@Model.AppointmentsNganVHH.Status</span>
									}
								</div>
							</div>

							<div class="detail-group" id="AppointmentsNganVHH_AssessmentType">
								<div class="detail-label">
									<i class="fas fa-clipboard-list"></i>AssessmentType
								</div>
								<div class="detail-value">@(Model.AppointmentsNganVHH.AssessmentType ?? "Chưa xác định")</div>
							</div>

							<div class="detail-group" id="AppointmentsNganVHH_RiskLevel">
								<div class="detail-label">
									<i class="fas fa-exclamation-triangle"></i>RiskLevel
								</div>
								<div class="detail-value">
									@if (Model.AppointmentsNganVHH.RiskLevel == "Low")
									{
										<span>🟢 Thấp</span>
									}
									else if (Model.AppointmentsNganVHH.RiskLevel == "Medium")
									{
										<span>🟡 Trung Bình</span>
									}
									else if (Model.AppointmentsNganVHH.RiskLevel == "High")
									{
										<span>🔴 Cao</span>
									}
									else
									{
										<span class="text-muted">⚠️ Chưa đánh giá</span>
									}
								</div>
							</div>

							<div class="detail-group" id="AppointmentsNganVHH_FeedbackRating">
								<div class="detail-label">
									<i class="fas fa-star"></i>FeedbackRating
								</div>
								<div class="detail-value">
									@if (Model.AppointmentsNganVHH.FeedbackRating.HasValue)
									{
										<span>@Model.AppointmentsNganVHH.FeedbackRating/5</span>
									}
									else
									{
										<span class="text-muted">Chưa đánh giá</span>
									}
								</div>
							</div>

							<div class="detail-group form-column-full" id="AppointmentsNganVHH_PrimaryIssue">
								<div class="detail-label">
									<i class="fas fa-comment-medical"></i>PrimaryIssue
								</div>
								<div class="detail-value textarea-custom">@(Model.AppointmentsNganVHH.PrimaryIssue ?? "")</div>
							</div>

							<div class="detail-group form-column-full" id="AppointmentsNganVHH_IsInterpreterNeeded">
								<div class="detail-label">
									<i class="fas fa-language"></i>IsInterpreterNeeded
								</div>
								<div class="radio-group-custom">
									<div class="radio-item-display @(Model.AppointmentsNganVHH.IsInterpreterNeeded == true ? "active" : "")">
										<i class="me-2 text-primary"></i>Có cần
									</div>
									<div class="radio-item-display @(Model.AppointmentsNganVHH.IsInterpreterNeeded == false ? "active" : "")">
										<i class="me-2 text-secondary"></i>Không cần
									</div>
								</div>
							</div>

							<div class="detail-group form-column-full" id="AppointmentsNganVHH_Notes">
								<div class="detail-label">
									<i class="fas fa-sticky-note"></i>Notes
								</div>
								<div class="detail-value textarea-custom">@(Model.AppointmentsNganVHH.Notes ?? "")</div>
							</div>

							<div class="detail-group form-column-full" id="AppointmentsNganVHH_RecordingLink">
								<div class="detail-label">
									<i class="fas fa-video"></i>RecordingLink
								</div>
								<div class="detail-value">
									@if (!string.IsNullOrEmpty(Model.AppointmentsNganVHH.RecordingLink))
									{
										<span><a href="@Model.AppointmentsNganVHH.RecordingLink" target="_blank" class="link-display">@Model.AppointmentsNganVHH.RecordingLink</a></span>
									}
									else
									{
										<span class="text-muted">Chưa có link ghi âm</span>
									}
								</div>
							</div>
						</div>

						<div class="btn-group-custom">
							<a asp-page="./Edit" asp-route-id="@Model.AppointmentsNganVHH.AppointmentNganVHHID" class="btn btn-primary-custom" id="AppointmentsNganVHH_EditBtn">
								<i class="fas fa-edit me-2"></i>Chỉnh Sửa
							</a>
							<a asp-page="./Index" class="btn btn-secondary-custom" id="AppointmentsNganVHH_BackBtn">
								<i class="fas fa-arrow-left me-2"></i>Quay Lại
							</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>

<script>
	"use strict";

	var connection = new signalR.HubConnectionBuilder().withUrl("/DrugPreventionHub").build();

	connection.start().then(function () {
		console.log("Connected to the SignalR Hub");
	}).catch(function (err) {
		return console.error(err.toString());
	});

	connection.on("Receiver_DeleteAppointments", function (AppointmentsNganVHHID) {
		document.getElementById("AppointmentsNganVHH_Container").innerHTML = 
			'<div class="card-body-custom text-center"><div class="alert alert-warning"><i class="fas fa-exclamation-triangle me-2"></i>Cuộc hẹn này đã bị xóa</div></div>';
	});

	connection.on("Receiver_UpdateAppointments", function (item) {
		// Cập nhật AppointmentDateTime với format đồng nhất
		var dateTimeElement = document.querySelector("#AppointmentsNganVHH_AppointmentDateTime .detail-value");
		if (dateTimeElement) {
			const date = new Date(item.appointmentDateTime);
			const day = String(date.getDate()).padStart(2, '0');
			const month = String(date.getMonth() + 1).padStart(2, '0');
			const year = date.getFullYear();
			const hours = String(date.getHours()).padStart(2, '0');
			const minutes = String(date.getMinutes()).padStart(2, '0');
			const formattedDate = `📅 ${day}/${month}/${year} ${hours}:${minutes}`;
			dateTimeElement.innerHTML = formattedDate;
		}

		// Cập nhật Duration
		var durationElement = document.querySelector("#AppointmentsNganVHH_Duration .detail-value");
		if (durationElement) {
			durationElement.innerHTML = item.duration + " phút";
		}

		// Cập nhật ConsultationType
		var consultationTypeRadios = document.querySelectorAll("#AppointmentsNganVHH_ConsultationType .radio-item-display");
		consultationTypeRadios.forEach(radio => radio.classList.remove('active'));
		if (item.consultationType === "Online") {
			consultationTypeRadios[0].classList.add('active');
		} else if (item.consultationType === "In-person") {
			consultationTypeRadios[1].classList.add('active');
		}

		// Cập nhật AssessmentType
		var assessmentElement = document.querySelector("#AppointmentsNganVHH_AssessmentType .detail-value");
		if (assessmentElement) {
			assessmentElement.innerHTML = (item.assessmentType || "Chưa xác định");
		}

		// Cập nhật IsInterpreterNeeded
		var interpreterRadios = document.querySelectorAll("#AppointmentsNganVHH_IsInterpreterNeeded .radio-item-display");
		interpreterRadios.forEach(radio => radio.classList.remove('active'));
		if (item.isInterpreterNeeded === true) {
			interpreterRadios[0].classList.add('active');
		} else {
			interpreterRadios[1].classList.add('active');
		}

		// Cập nhật PrimaryIssue
		var primaryIssueElement = document.querySelector("#AppointmentsNganVHH_PrimaryIssue .detail-value");
		if (primaryIssueElement) {
			primaryIssueElement.innerHTML = item.primaryIssue || "";
		}

		// Cập nhật RiskLevel
		var riskElement = document.querySelector("#AppointmentsNganVHH_RiskLevel .detail-value");
		if (riskElement) {
			var riskText = "";
			switch(item.riskLevel) {
				case "Low": riskText = "🟢 Thấp"; break;
				case "Medium": riskText = "🟡 Trung Bình"; break;
				case "High": riskText = "🔴 Cao"; break;
				default: riskText = '<span class="text-muted">⚠️ Chưa đánh giá</span>';
			}
			riskElement.innerHTML = riskText;
		}

		// Cập nhật Status
		var statusElement = document.querySelector("#AppointmentsNganVHH_Status .detail-value");
		if (statusElement) {
			var statusText = "";
			switch(item.status) {
				case "Scheduled": statusText = "📅 Đã Lên Lịch"; break;
				case "In-Progress": statusText = "⚡ Đang Tiến Hành"; break;
				case "Completed": statusText = "✅ Hoàn Thành"; break;
				case "Cancelled": statusText = "❌ Đã Hủy"; break;
				default: statusText = item.status;
			}
			statusElement.innerHTML = statusText;
		}

		// Cập nhật FeedbackRating
		var feedbackElement = document.querySelector("#AppointmentsNganVHH_FeedbackRating .detail-value");
		if (feedbackElement) {
			var feedbackText = item.feedbackRating ? 
				item.feedbackRating + "/5" : 
				'<span class="text-muted">Chưa đánh giá</span>';
			feedbackElement.innerHTML = feedbackText;
		}

		// Cập nhật Notes
		var notesElement = document.querySelector("#AppointmentsNganVHH_Notes .detail-value");
		if (notesElement) {
			notesElement.innerHTML = item.notes || "";
		}

		// Cập nhật RecordingLink
		var recordingElement = document.querySelector("#AppointmentsNganVHH_RecordingLink .detail-value");
		if (recordingElement) {
			var recordingText = item.recordingLink ? 
				'🎥 <a href="' + item.recordingLink + '" target="_blank" class="link-display">' + item.recordingLink + '</a>' :
				'<span class="text-muted">Chưa có link ghi âm</span>';
			recordingElement.innerHTML = recordingText;
		}
	});
</script>
