// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DrugPrevention.Repositories.NganVHH.Models;

/// <summary>
/// Bảng lưu trữ thông tin các cuộc hẹn tư vấn về phòng chống ma túy
/// </summary>
[Table("AppointmentsNganVHH")]
[Index("ConsultantID", Name = "IDX_AppointmentsNganVHH_ConsultantID")]
[Index("ConsultantID", Name = "IDX_AppointmentsNganVHH_ConsultantID_FK")]
[Index("AppointmentDateTime", Name = "IDX_AppointmentsNganVHH_DateTime")]
[Index("IsInterpreterNeeded", Name = "IDX_AppointmentsNganVHH_IsInterpreterNeeded")]
[Index("Status", Name = "IDX_AppointmentsNganVHH_Status")]
[Index("UserID", Name = "IDX_AppointmentsNganVHH_UserID")]
[Index("UserID", Name = "IDX_AppointmentsNganVHH_UserID_FK")]
public partial class AppointmentsNganVHH
{
    [Key]
    public int AppointmentNganVHHID { get; set; }

    /// <summary>
    /// Liên kết đến bảng UsersTuyenTM để xác định người dùng đặt lịch hẹn
    /// </summary>
    [Required]
    public int UserID { get; set; }

    /// <summary>
    /// Liên kết đến bảng ConsultantsTrongLH để xác định chuyên gia tư vấn phụ trách
    /// </summary>
    [Required]
    public int ConsultantID { get; set; }

    [Required]
    [FutureOrPresent(ErrorMessage = "Appointment date/time must be now hoặc tương lai.")]
    [Column(TypeName = "datetime")]
    public DateTime AppointmentDateTime { get; set; }

    [Required]
    [Range(30, 480, ErrorMessage = "Duration must be between 30 and 480 minutes")]
    public int Duration { get; set; }

    [Required]
    [StringLength(50)]
    public string ConsultationType { get; set; }

    [Required]
    [StringLength(50)]
    public string AssessmentType { get; set; }

    /// <summary>
    /// Cuộc hẹn có cần người thông dịch không? (0: Không cần, 1: Cần thông dịch viên)
    /// </summary>
    public bool? IsInterpreterNeeded { get; set; }

    [StringLength(255)]
    public string PrimaryIssue { get; set; }

    [StringLength(20)]
    public string RiskLevel { get; set; }

    [Required]
    [StringLength(20)]
    public string Status { get; set; }

    [RegularExpression(@"^\d+.?\d{0,2}$", ErrorMessage ="Invalid Feedback Rating")]
    [Range(1, 5, ErrorMessage = "Ranking is between 1 to 5")]
    public int? FeedbackRating { get; set; }

    public string Notes { get; set; }

    [StringLength(500)]
    [Url(ErrorMessage = "RecordingLink must be a valid URL")]
    public string RecordingLink { get; set; }

    [ForeignKey("ConsultantID")]
    [InverseProperty("AppointmentsNganVHHs")]
    public virtual ConsultantsTrongLH Consultant { get; set; }

    [ForeignKey("UserID")]
    [InverseProperty("AppointmentsNganVHHs")]
    public virtual UsersTuyenTM User { get; set; }
}